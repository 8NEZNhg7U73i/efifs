<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\grub\grub-core\fs\fshelp.c" />
    <ClCompile Include="..\grub\grub-core\kern\err.c" />
    <ClCompile Include="..\grub\grub-core\kern\list.c" />
    <ClCompile Include="..\grub\grub-core\kern\misc.c" />
    <ClCompile Include="..\grub\grub-core\lib\crc.c" />
    <ClCompile Include="..\grub\grub-core\lib\minilzo\minilzo.c">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">LZO_CFG_FREESTANDING;MINILZO_CFG_SKIP_LZO1X_1_COMPRESS;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">LZO_CFG_FREESTANDING;MINILZO_CFG_SKIP_LZO1X_1_COMPRESS;LZO_CFG_PGO;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">LZO_CFG_FREESTANDING;MINILZO_CFG_SKIP_LZO1X_1_COMPRESS;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">LZO_CFG_FREESTANDING;MINILZO_CFG_SKIP_LZO1X_1_COMPRESS;LZO_CFG_PGO;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">LZO_CFG_FREESTANDING;MINILZO_CFG_SKIP_LZO1X_1_COMPRESS;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">LZO_CFG_FREESTANDING;MINILZO_CFG_SKIP_LZO1X_1_COMPRESS;LZO_CFG_PGO;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="..\src\grub.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\config.h" />
  </ItemGroup>
  <ItemGroup>
    <MASM Include="..\missing\intrinsics_x86.asm">
      <FileType>Document</FileType>
      <UseSafeExceptionHandlers Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</UseSafeExceptionHandlers>
      <UseSafeExceptionHandlers Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</UseSafeExceptionHandlers>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">true</ExcludedFromBuild>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AMD64</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AMD64</PreprocessorDefinitions>
    </MASM>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{628E3F58-0AA9-40BB-8E49-D8CC513AAD63}</ProjectGuid>
    <RootNamespace>grub</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140_clang_c2</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140_clang_c2</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140_clang_c2</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140_clang_c2</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140_clang_c2</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140_clang_c2</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)x64\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <UseMultiToolTask>true</UseMultiToolTask>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(SolutionDir)ia32\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <UseMultiToolTask>true</UseMultiToolTask>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <OutDir>$(SolutionDir)arm\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <UseMultiToolTask>true</UseMultiToolTask>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)x64\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <UseMultiToolTask>true</UseMultiToolTask>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)ia32\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <UseMultiToolTask>true</UseMultiToolTask>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <OutDir>$(SolutionDir)arm\$(Configuration)\</OutDir>
    <IntDir>$(OutDir)$(ProjectName)\</IntDir>
    <UseMultiToolTask>true</UseMultiToolTask>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(VCClangInstallDir)\include;$(SolutionDir)\missing;$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\gnu-efi\inc\x86_64;$(SolutionDir)\grub\include;$(SolutionDir)\grub-core\lib\minilzo;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>grub_err_printf=grub_printf;LZO_CFG_FREESTANDING;LZO_CFG_PGO;MINILZO_CFG_USE_INTERNAL_LZODEFS;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Disabled</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <MSExtensions>false</MSExtensions>
      <AdditionalOptions>-ffreestanding -Wno-macro-redefined -fno-builtin</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
    </Lib>
    <PreBuildEvent>
      <Command>cd "$(SolutionDir)grub\include\grub\"
call "$(SolutionDir)set_grub_cpu.cmd" $(Platform)</Command>
      <Message>Set GRUB include\grub\cpu</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(VCClangInstallDir)\include;$(SolutionDir)\missing;$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\gnu-efi\inc\ia32;$(SolutionDir)\grub\include;$(SolutionDir)\grub-core\lib\minilzo;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>grub_err_printf=grub_printf;LZO_CFG_FREESTANDING;LZO_CFG_PGO;MINILZO_CFG_USE_INTERNAL_LZODEFS;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Disabled</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <MSExtensions>false</MSExtensions>
      <AdditionalOptions>-ffreestanding -Wno-macro-redefined -fno-builtin</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
    </Lib>
    <PreBuildEvent>
      <Command>cd "$(SolutionDir)grub\include\grub\"
call "$(SolutionDir)set_grub_cpu.cmd" $(Platform)</Command>
      <Message>Set GRUB include\grub\cpu</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(VCClangInstallDir)\include;$(SolutionDir)\missing;$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\gnu-efi\inc\arm;$(SolutionDir)\grub\include;$(SolutionDir)\grub-core\lib\minilzo;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>grub_err_printf=grub_printf;LZO_CFG_FREESTANDING;LZO_CFG_PGO;MINILZO_CFG_USE_INTERNAL_LZODEFS;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Disabled</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <MSExtensions>false</MSExtensions>
      <AdditionalOptions>-ffreestanding -Wno-macro-redefined -fno-builtin</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
    </Lib>
    <PreBuildEvent>
      <Command>cd "$(SolutionDir)grub\include\grub\"
call "$(SolutionDir)set_grub_cpu.cmd" $(Platform)</Command>
      <Message>Set GRUB include\grub\cpu</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(VCClangInstallDir)\include;$(SolutionDir)\missing;$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\gnu-efi\inc\x86_64;$(SolutionDir)\grub\include;$(SolutionDir)\grub-core\lib\minilzo;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>grub_err_printf=grub_printf;LZO_CFG_FREESTANDING;LZO_CFG_PGO;MINILZO_CFG_USE_INTERNAL_LZODEFS;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Disabled</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <MSExtensions>false</MSExtensions>
      <AdditionalOptions>-ffreestanding -Wno-macro-redefined -fno-builtin</AdditionalOptions>
      <Optimization>MinSize</Optimization>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <LinkTimeCodeGeneration>false</LinkTimeCodeGeneration>
    </Lib>
    <PreBuildEvent>
      <Command>cd "$(SolutionDir)grub\include\grub\"
call "$(SolutionDir)set_grub_cpu.cmd" $(Platform)</Command>
      <Message>Set GRUB include\grub\cpu</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(VCClangInstallDir)\include;$(SolutionDir)\missing;$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\gnu-efi\inc\ia32;$(SolutionDir)\grub\include;$(SolutionDir)\grub-core\lib\minilzo;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>grub_err_printf=grub_printf;LZO_CFG_FREESTANDING;LZO_CFG_PGO;MINILZO_CFG_USE_INTERNAL_LZODEFS;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Disabled</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <MSExtensions>false</MSExtensions>
      <AdditionalOptions>-ffreestanding -Wno-macro-redefined -fno-builtin</AdditionalOptions>
      <Optimization>MinSize</Optimization>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <LinkTimeCodeGeneration>false</LinkTimeCodeGeneration>
    </Lib>
    <PreBuildEvent>
      <Command>cd "$(SolutionDir)grub\include\grub\"
call "$(SolutionDir)set_grub_cpu.cmd" $(Platform)</Command>
      <Message>Set GRUB include\grub\cpu</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(VCClangInstallDir)\include;$(SolutionDir)\missing;$(SolutionDir)\gnu-efi\inc;$(SolutionDir)\gnu-efi\inc\arm;$(SolutionDir)\grub\include;$(SolutionDir)\grub-core\lib\minilzo;$(SolutionDir)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>grub_err_printf=grub_printf;LZO_CFG_FREESTANDING;LZO_CFG_PGO;MINILZO_CFG_USE_INTERNAL_LZODEFS;_UNICODE;UNICODE;GRUB_FILE=__FILE__;HAVE_USE_MS_ABI;GNU_EFI_USE_EXTERNAL_STDARG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>Disabled</ExceptionHandling>
      <CompileAs>CompileAsC</CompileAs>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <WholeProgramOptimization>false</WholeProgramOptimization>
      <MSExtensions>false</MSExtensions>
      <AdditionalOptions>-ffreestanding -Wno-macro-redefined -fno-builtin</AdditionalOptions>
      <Optimization>MinSize</Optimization>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <SubSystem>EFI Application</SubSystem>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <LinkTimeCodeGeneration>false</LinkTimeCodeGeneration>
    </Lib>
    <PreBuildEvent>
      <Command>cd "$(SolutionDir)grub\include\grub\"
call "$(SolutionDir)set_grub_cpu.cmd" $(Platform)</Command>
      <Message>Set GRUB include\grub\cpu</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.targets" />
  </ImportGroup>
</Project>